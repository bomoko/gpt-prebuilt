# Standalone Docker Compose file for using pre-built images from GHCR
# This file is completely self-contained and does not depend on the original docker-compose.yml
# Designed to be used in a separate deployment repository (private-gpt-prod)

x-environment: &default-environment
  LAGOON_PROJECT: &lagoon-project ${COMPOSE_PROJECT_NAME:-privategpt}
  LAGOON_ROUTE: &default-url http://${COMPOSE_PROJECT_NAME:-privategpt}.docker.amazee.io

volumes:
  chat-storage:
  db:

x-user:
  &default-user # The default user under which the containers should run. Change this if you are on linux and run with another user than id `1000`
  user: '1000'

services:
  chat:
    build:
      context: .
      dockerfile: lagoon/chat.dockerfile
    # image: ghcr.io/amazeelabs/private-gpt/chat:latest
    labels:
      lagoon.type: python-persistent
      lagoon.persistent: /app/.files
      lagoon.name: chat
    ports:
      - '8080'
    environment:
      <<: *default-environment
      LAGOON_LOCALDEV_URL: chat-${COMPOSE_PROJECT_NAME:-privategpt}.docker.amazee.io
      AMAZEEAI_API_KEY: '${AMAZEEAI_API_KEY}'
      AMAZEEAI_BASE_URL: '${AMAZEEAI_BASE_URL}'
      PHOENIX_WORKING_DIR: '${PHOENIX_WORKING_DIR}'
    networks:
      - amazeeio-network
      - default

  postgrespgvector:
    build:
      context: .
      dockerfile: lagoon/postgrespgvector.dockerfile
    # image: ghcr.io/amazeelabs/private-gpt/postgrespgvector:latest
    labels:
      lagoon.type: postgres-single
    ports:
      - '5432'
    environment:
      <<: *default-environment
    volumes:
      - db:/var/lib/postgresql/data

  cli: # cli container, will be used for executing composer and any local commands (drush, drupal, etc.)
    # image: ghcr.io/amazeelabs/private-gpt/cli:latest
    build:
      context: .
      dockerfile: lagoon/cli.dockerfile
    labels:
      # Lagoon Labels
      lagoon.type: cli-persistent
      lagoon.persistent.name: nginx # mount the persistent storage of nginx into this container
      lagoon.persistent: /app/web/sites/default/files/ # location where the persistent storage should be mounted
      lando.type: php-cli-drupal
    user: root
    volumes_from: ### mount the ssh-agent from the pygmy or cachalot ssh-agent. Automatically removed in CI.
      - container:amazeeio-ssh-agent ### Local overrides to mount host SSH keys. Automatically removed in CI.
    environment:
      <<: *default-environment # loads the defined environment variables from the top

  nginx:
    # image: ghcr.io/amazeelabs/private-gpt/nginx:latest
    build:
      context: .
      dockerfile: lagoon/nginx.dockerfile
    labels:
      lagoon.type: nginx-php-persistent
      lagoon.persistent: /app/web/sites/default/files/
      lando.type: nginx-drupal
    <<: *default-user # uses the defined user from top
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    environment:
      <<: *default-environment # loads the defined environment variables from the top
      LAGOON_LOCALDEV_URL: drupal-privategpt.docker.amazee.io
    networks:
      - amazeeio-network
      - default

  php:
    # image: ghcr.io/amazeelabs/private-gpt/php:latest
    build:
      context: .
      dockerfile: lagoon/php.dockerfile
    labels:
      lagoon.type: nginx-php-persistent
      lagoon.name: nginx
      lagoon.persistent: /app/web/sites/default/files/ # define where the persistent storage should be mounted too
      lando.type: php-fpm
    <<: *default-user # uses the defined user from top
    depends_on:
      - cli
    environment:
      <<: *default-environment

  mariadb:
    image: uselagoon/mariadb-10.11
    labels:
      lagoon.type: mariadb
    ports:
      - '3306'
    <<: *default-user # uses the defined user from top
    environment:
      <<: *default-environment

networks:
  amazeeio-network:
    external: true